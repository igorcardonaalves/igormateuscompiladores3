   0  $accept : prog $end

   1  $$1 :

   2  prog : $$1 dList mainF

   3  $$2 :

   4  $$3 :

   5  mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 '}'

   6  dList : decl dList
   7        |

   8  decl : type ID ';'
   9       | ArrayDec

  10  ArrayDec : type ID '[' NUM ']' ';'

  11  type : INT
  12       | FLOAT
  13       | BOOL

  14  lcmd : lcmd cmd
  15       |

  16  cmd : exp ';'
  17      | '{' lcmd '}'
  18      | WRITE '(' LIT ')' ';'

  19  $$4 :

  20  cmd : WRITE '(' LIT $$4 ',' exp ')' ';'
  21      | READ '(' ID ')' ';'

  22  $$5 :

  23  $$6 :

  24  cmd : WHILE $$5 '(' exp ')' $$6 cmd

  25  $$7 :

  26  cmd : DO $$7 cmd WHILE '(' exp ')' ';'

  27  $$8 :

  28  $$9 :

  29  $$10 :

  30  cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmd
  31      | CONTINUE ';'
  32      | BREAK ';'

  33  $$11 :

  34  cmd : IF '(' exp $$11 ')' cmd restoIf

  35  ExpOpc : exp
  36         |

  37  $$12 :

  38  restoIf : ELSE $$12 cmd
  39          |

  40  exp : NUM
  41      | TRUE
  42      | FALSE
  43      | ID
  44      | ID INCR
  45      | INCR ID
  46      | '(' exp ')'
  47      | '!' exp
  48      | exp '+' exp
  49      | exp '-' exp
  50      | exp '*' exp
  51      | exp '/' exp
  52      | exp '%' exp
  53      | exp '>' exp
  54      | exp '<' exp
  55      | exp EQ exp
  56      | exp LEQ exp
  57      | exp GEQ exp
  58      | exp NEQ exp
  59      | exp OR exp
  60      | exp AND exp
  61      | ID '=' exp

state 0
	$accept : . prog $end  (0)
	$$1 : .  (1)

	.  reduce 1

	prog  goto 1
	$$1  goto 2


state 1
	$accept : prog . $end  (0)

	$end  accept


state 2
	prog : $$1 . dList mainF  (2)
	dList : .  (7)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	VOID  reduce 7

	type  goto 6
	dList  goto 7
	decl  goto 8
	ArrayDec  goto 9


state 3
	type : INT .  (11)

	.  reduce 11


state 4
	type : FLOAT .  (12)

	.  reduce 12


state 5
	type : BOOL .  (13)

	.  reduce 13


state 6
	decl : type . ID ';'  (8)
	ArrayDec : type . ID '[' NUM ']' ';'  (10)

	ID  shift 10
	.  error


state 7
	prog : $$1 dList . mainF  (2)

	VOID  shift 11
	.  error

	mainF  goto 12


state 8
	dList : decl . dList  (6)
	dList : .  (7)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	VOID  reduce 7

	type  goto 6
	dList  goto 13
	decl  goto 8
	ArrayDec  goto 9


state 9
	decl : ArrayDec .  (9)

	.  reduce 9


state 10
	decl : type ID . ';'  (8)
	ArrayDec : type ID . '[' NUM ']' ';'  (10)

	';'  shift 14
	'['  shift 15
	.  error


state 11
	mainF : VOID . MAIN '(' ')' $$2 '{' lcmd $$3 '}'  (5)

	MAIN  shift 16
	.  error


state 12
	prog : $$1 dList mainF .  (2)

	.  reduce 2


state 13
	dList : decl dList .  (6)

	.  reduce 6


state 14
	decl : type ID ';' .  (8)

	.  reduce 8


state 15
	ArrayDec : type ID '[' . NUM ']' ';'  (10)

	NUM  shift 17
	.  error


state 16
	mainF : VOID MAIN . '(' ')' $$2 '{' lcmd $$3 '}'  (5)

	'('  shift 18
	.  error


state 17
	ArrayDec : type ID '[' NUM . ']' ';'  (10)

	']'  shift 19
	.  error


state 18
	mainF : VOID MAIN '(' . ')' $$2 '{' lcmd $$3 '}'  (5)

	')'  shift 20
	.  error


state 19
	ArrayDec : type ID '[' NUM ']' . ';'  (10)

	';'  shift 21
	.  error


state 20
	mainF : VOID MAIN '(' ')' . $$2 '{' lcmd $$3 '}'  (5)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 22


state 21
	ArrayDec : type ID '[' NUM ']' ';' .  (10)

	.  reduce 10


state 22
	mainF : VOID MAIN '(' ')' $$2 . '{' lcmd $$3 '}'  (5)

	'{'  shift 23
	.  error


state 23
	mainF : VOID MAIN '(' ')' $$2 '{' . lcmd $$3 '}'  (5)
	lcmd : .  (15)

	.  reduce 15

	lcmd  goto 24


state 24
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd . $$3 '}'  (5)
	lcmd : lcmd . cmd  (14)
	$$3 : .  (4)

	ID  shift 25
	NUM  shift 26
	READ  shift 27
	WRITE  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	TRUE  shift 32
	FALSE  shift 33
	CONTINUE  shift 34
	BREAK  shift 35
	INCR  shift 36
	DO  shift 37
	'!'  shift 38
	'('  shift 39
	'{'  shift 40
	'}'  reduce 4

	$$3  goto 41
	cmd  goto 42
	exp  goto 43


state 25
	exp : ID .  (43)
	exp : ID . INCR  (44)
	exp : ID . '=' exp  (61)

	INCR  shift 44
	'='  shift 45
	EQ  reduce 43
	LEQ  reduce 43
	GEQ  reduce 43
	NEQ  reduce 43
	AND  reduce 43
	OR  reduce 43
	'>'  reduce 43
	'<'  reduce 43
	'+'  reduce 43
	'-'  reduce 43
	'*'  reduce 43
	'/'  reduce 43
	'%'  reduce 43
	')'  reduce 43
	';'  reduce 43


state 26
	exp : NUM .  (40)

	.  reduce 40


state 27
	cmd : READ . '(' ID ')' ';'  (21)

	'('  shift 46
	.  error


state 28
	cmd : WRITE . '(' LIT ')' ';'  (18)
	cmd : WRITE . '(' LIT $$4 ',' exp ')' ';'  (20)

	'('  shift 47
	.  error


state 29
	cmd : IF . '(' exp $$11 ')' cmd restoIf  (34)

	'('  shift 48
	.  error


state 30
	cmd : WHILE . $$5 '(' exp ')' $$6 cmd  (24)
	$$5 : .  (22)

	.  reduce 22

	$$5  goto 49


state 31
	cmd : FOR . '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmd  (30)

	'('  shift 50
	.  error


state 32
	exp : TRUE .  (41)

	.  reduce 41


state 33
	exp : FALSE .  (42)

	.  reduce 42


state 34
	cmd : CONTINUE . ';'  (31)

	';'  shift 51
	.  error


state 35
	cmd : BREAK . ';'  (32)

	';'  shift 52
	.  error


state 36
	exp : INCR . ID  (45)

	ID  shift 53
	.  error


state 37
	cmd : DO . $$7 cmd WHILE '(' exp ')' ';'  (26)
	$$7 : .  (25)

	.  reduce 25

	$$7  goto 54


state 38
	exp : '!' . exp  (47)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 55


state 39
	exp : '(' . exp ')'  (46)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 56


state 40
	cmd : '{' . lcmd '}'  (17)
	lcmd : .  (15)

	.  reduce 15

	lcmd  goto 57


state 41
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 . '}'  (5)

	'}'  shift 58
	.  error


state 42
	lcmd : lcmd cmd .  (14)

	.  reduce 14


state 43
	cmd : exp . ';'  (16)
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	AND  shift 63
	OR  shift 64
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	';'  shift 72
	.  error


state 44
	exp : ID INCR .  (44)

	.  reduce 44


state 45
	exp : ID '=' . exp  (61)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 73


state 46
	cmd : READ '(' . ID ')' ';'  (21)

	ID  shift 74
	.  error


state 47
	cmd : WRITE '(' . LIT ')' ';'  (18)
	cmd : WRITE '(' . LIT $$4 ',' exp ')' ';'  (20)

	LIT  shift 75
	.  error


state 48
	cmd : IF '(' . exp $$11 ')' cmd restoIf  (34)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 76


state 49
	cmd : WHILE $$5 . '(' exp ')' $$6 cmd  (24)

	'('  shift 77
	.  error


state 50
	cmd : FOR '(' . ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmd  (30)
	ExpOpc : .  (36)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	';'  reduce 36

	exp  goto 78
	ExpOpc  goto 79


state 51
	cmd : CONTINUE ';' .  (31)

	.  reduce 31


state 52
	cmd : BREAK ';' .  (32)

	.  reduce 32


state 53
	exp : INCR ID .  (45)

	.  reduce 45


state 54
	cmd : DO $$7 . cmd WHILE '(' exp ')' ';'  (26)

	ID  shift 25
	NUM  shift 26
	READ  shift 27
	WRITE  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	TRUE  shift 32
	FALSE  shift 33
	CONTINUE  shift 34
	BREAK  shift 35
	INCR  shift 36
	DO  shift 37
	'!'  shift 38
	'('  shift 39
	'{'  shift 40
	.  error

	cmd  goto 80
	exp  goto 43


state 55
	exp : '!' exp .  (47)
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	.  reduce 47


state 56
	exp : '(' exp . ')'  (46)
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	AND  shift 63
	OR  shift 64
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	')'  shift 81
	.  error


state 57
	lcmd : lcmd . cmd  (14)
	cmd : '{' lcmd . '}'  (17)

	ID  shift 25
	NUM  shift 26
	READ  shift 27
	WRITE  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	TRUE  shift 32
	FALSE  shift 33
	CONTINUE  shift 34
	BREAK  shift 35
	INCR  shift 36
	DO  shift 37
	'!'  shift 38
	'('  shift 39
	'{'  shift 40
	'}'  shift 82
	.  error

	cmd  goto 42
	exp  goto 43


state 58
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 '}' .  (5)

	.  reduce 5


state 59
	exp : exp EQ . exp  (55)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 83


state 60
	exp : exp LEQ . exp  (56)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 84


state 61
	exp : exp GEQ . exp  (57)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 85


state 62
	exp : exp NEQ . exp  (58)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 86


state 63
	exp : exp AND . exp  (60)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 87


state 64
	exp : exp OR . exp  (59)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 88


state 65
	exp : exp '>' . exp  (53)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 89


state 66
	exp : exp '<' . exp  (54)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 90


state 67
	exp : exp '+' . exp  (48)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 91


state 68
	exp : exp '-' . exp  (49)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 92


state 69
	exp : exp '*' . exp  (50)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 93


state 70
	exp : exp '/' . exp  (51)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 94


state 71
	exp : exp '%' . exp  (52)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 95


state 72
	cmd : exp ';' .  (16)

	.  reduce 16


state 73
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)
	exp : ID '=' exp .  (61)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	AND  shift 63
	OR  shift 64
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	')'  reduce 61
	';'  reduce 61


state 74
	cmd : READ '(' ID . ')' ';'  (21)

	')'  shift 96
	.  error


state 75
	cmd : WRITE '(' LIT . ')' ';'  (18)
	cmd : WRITE '(' LIT . $$4 ',' exp ')' ';'  (20)
	$$4 : .  (19)

	')'  shift 97
	','  reduce 19

	$$4  goto 98


state 76
	cmd : IF '(' exp . $$11 ')' cmd restoIf  (34)
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)
	$$11 : .  (33)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	AND  shift 63
	OR  shift 64
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	')'  reduce 33

	$$11  goto 99


state 77
	cmd : WHILE $$5 '(' . exp ')' $$6 cmd  (24)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 100


state 78
	ExpOpc : exp .  (35)
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	AND  shift 63
	OR  shift 64
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	')'  reduce 35
	';'  reduce 35


state 79
	cmd : FOR '(' ExpOpc . ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmd  (30)

	';'  shift 101
	.  error


state 80
	cmd : DO $$7 cmd . WHILE '(' exp ')' ';'  (26)

	WHILE  shift 102
	.  error


state 81
	exp : '(' exp ')' .  (46)

	.  reduce 46


state 82
	cmd : '{' lcmd '}' .  (17)

	.  reduce 17


state 83
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp EQ exp .  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	EQ  reduce 55
	LEQ  reduce 55
	GEQ  reduce 55
	NEQ  reduce 55
	AND  reduce 55
	OR  reduce 55
	'>'  reduce 55
	'<'  reduce 55
	')'  reduce 55
	';'  reduce 55


state 84
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp LEQ exp .  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	EQ  reduce 56
	LEQ  reduce 56
	GEQ  reduce 56
	NEQ  reduce 56
	AND  reduce 56
	OR  reduce 56
	'>'  reduce 56
	'<'  reduce 56
	')'  reduce 56
	';'  reduce 56


state 85
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp GEQ exp .  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	EQ  reduce 57
	LEQ  reduce 57
	GEQ  reduce 57
	NEQ  reduce 57
	AND  reduce 57
	OR  reduce 57
	'>'  reduce 57
	'<'  reduce 57
	')'  reduce 57
	';'  reduce 57


state 86
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp NEQ exp .  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	EQ  reduce 58
	LEQ  reduce 58
	GEQ  reduce 58
	NEQ  reduce 58
	AND  reduce 58
	OR  reduce 58
	'>'  reduce 58
	'<'  reduce 58
	')'  reduce 58
	';'  reduce 58


state 87
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)
	exp : exp AND exp .  (60)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	AND  reduce 60
	OR  reduce 60
	')'  reduce 60
	';'  reduce 60


state 88
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp OR exp .  (59)
	exp : exp . AND exp  (60)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	AND  shift 63
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	OR  reduce 59
	')'  reduce 59
	';'  reduce 59


state 89
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp '>' exp .  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	EQ  reduce 53
	LEQ  reduce 53
	GEQ  reduce 53
	NEQ  reduce 53
	AND  reduce 53
	OR  reduce 53
	'>'  reduce 53
	'<'  reduce 53
	')'  reduce 53
	';'  reduce 53


state 90
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp '<' exp .  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	EQ  reduce 54
	LEQ  reduce 54
	GEQ  reduce 54
	NEQ  reduce 54
	AND  reduce 54
	OR  reduce 54
	'>'  reduce 54
	'<'  reduce 54
	')'  reduce 54
	';'  reduce 54


state 91
	exp : exp . '+' exp  (48)
	exp : exp '+' exp .  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	EQ  reduce 48
	LEQ  reduce 48
	GEQ  reduce 48
	NEQ  reduce 48
	AND  reduce 48
	OR  reduce 48
	'>'  reduce 48
	'<'  reduce 48
	'+'  reduce 48
	'-'  reduce 48
	')'  reduce 48
	';'  reduce 48


state 92
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp '-' exp .  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	EQ  reduce 49
	LEQ  reduce 49
	GEQ  reduce 49
	NEQ  reduce 49
	AND  reduce 49
	OR  reduce 49
	'>'  reduce 49
	'<'  reduce 49
	'+'  reduce 49
	'-'  reduce 49
	')'  reduce 49
	';'  reduce 49


state 93
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp '*' exp .  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	.  reduce 50


state 94
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp '/' exp .  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	.  reduce 51


state 95
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp '%' exp .  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	.  reduce 52


state 96
	cmd : READ '(' ID ')' . ';'  (21)

	';'  shift 103
	.  error


state 97
	cmd : WRITE '(' LIT ')' . ';'  (18)

	';'  shift 104
	.  error


state 98
	cmd : WRITE '(' LIT $$4 . ',' exp ')' ';'  (20)

	','  shift 105
	.  error


state 99
	cmd : IF '(' exp $$11 . ')' cmd restoIf  (34)

	')'  shift 106
	.  error


state 100
	cmd : WHILE $$5 '(' exp . ')' $$6 cmd  (24)
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	AND  shift 63
	OR  shift 64
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	')'  shift 107
	.  error


state 101
	cmd : FOR '(' ExpOpc ';' . $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmd  (30)
	$$8 : .  (27)

	.  reduce 27

	$$8  goto 108


state 102
	cmd : DO $$7 cmd WHILE . '(' exp ')' ';'  (26)

	'('  shift 109
	.  error


state 103
	cmd : READ '(' ID ')' ';' .  (21)

	.  reduce 21


state 104
	cmd : WRITE '(' LIT ')' ';' .  (18)

	.  reduce 18


state 105
	cmd : WRITE '(' LIT $$4 ',' . exp ')' ';'  (20)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 110


state 106
	cmd : IF '(' exp $$11 ')' . cmd restoIf  (34)

	ID  shift 25
	NUM  shift 26
	READ  shift 27
	WRITE  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	TRUE  shift 32
	FALSE  shift 33
	CONTINUE  shift 34
	BREAK  shift 35
	INCR  shift 36
	DO  shift 37
	'!'  shift 38
	'('  shift 39
	'{'  shift 40
	.  error

	cmd  goto 111
	exp  goto 43


state 107
	cmd : WHILE $$5 '(' exp ')' . $$6 cmd  (24)
	$$6 : .  (23)

	.  reduce 23

	$$6  goto 112


state 108
	cmd : FOR '(' ExpOpc ';' $$8 . ExpOpc ';' $$9 ExpOpc $$10 ')' cmd  (30)
	ExpOpc : .  (36)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	';'  reduce 36

	exp  goto 78
	ExpOpc  goto 113


state 109
	cmd : DO $$7 cmd WHILE '(' . exp ')' ';'  (26)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	.  error

	exp  goto 114


state 110
	cmd : WRITE '(' LIT $$4 ',' exp . ')' ';'  (20)
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	AND  shift 63
	OR  shift 64
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	')'  shift 115
	.  error


111: shift/reduce conflict (shift 116, reduce 39) on ELSE
state 111
	cmd : IF '(' exp $$11 ')' cmd . restoIf  (34)
	restoIf : .  (39)

	ELSE  shift 116
	ID  reduce 39
	NUM  reduce 39
	READ  reduce 39
	WRITE  reduce 39
	IF  reduce 39
	WHILE  reduce 39
	FOR  reduce 39
	TRUE  reduce 39
	FALSE  reduce 39
	CONTINUE  reduce 39
	BREAK  reduce 39
	INCR  reduce 39
	DO  reduce 39
	'!'  reduce 39
	'('  reduce 39
	'{'  reduce 39
	'}'  reduce 39

	restoIf  goto 117


state 112
	cmd : WHILE $$5 '(' exp ')' $$6 . cmd  (24)

	ID  shift 25
	NUM  shift 26
	READ  shift 27
	WRITE  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	TRUE  shift 32
	FALSE  shift 33
	CONTINUE  shift 34
	BREAK  shift 35
	INCR  shift 36
	DO  shift 37
	'!'  shift 38
	'('  shift 39
	'{'  shift 40
	.  error

	cmd  goto 118
	exp  goto 43


state 113
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc . ';' $$9 ExpOpc $$10 ')' cmd  (30)

	';'  shift 119
	.  error


state 114
	cmd : DO $$7 cmd WHILE '(' exp . ')' ';'  (26)
	exp : exp . '+' exp  (48)
	exp : exp . '-' exp  (49)
	exp : exp . '*' exp  (50)
	exp : exp . '/' exp  (51)
	exp : exp . '%' exp  (52)
	exp : exp . '>' exp  (53)
	exp : exp . '<' exp  (54)
	exp : exp . EQ exp  (55)
	exp : exp . LEQ exp  (56)
	exp : exp . GEQ exp  (57)
	exp : exp . NEQ exp  (58)
	exp : exp . OR exp  (59)
	exp : exp . AND exp  (60)

	EQ  shift 59
	LEQ  shift 60
	GEQ  shift 61
	NEQ  shift 62
	AND  shift 63
	OR  shift 64
	'>'  shift 65
	'<'  shift 66
	'+'  shift 67
	'-'  shift 68
	'*'  shift 69
	'/'  shift 70
	'%'  shift 71
	')'  shift 120
	.  error


state 115
	cmd : WRITE '(' LIT $$4 ',' exp ')' . ';'  (20)

	';'  shift 121
	.  error


state 116
	restoIf : ELSE . $$12 cmd  (38)
	$$12 : .  (37)

	.  reduce 37

	$$12  goto 122


state 117
	cmd : IF '(' exp $$11 ')' cmd restoIf .  (34)

	.  reduce 34


state 118
	cmd : WHILE $$5 '(' exp ')' $$6 cmd .  (24)

	.  reduce 24


state 119
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' . $$9 ExpOpc $$10 ')' cmd  (30)
	$$9 : .  (28)

	.  reduce 28

	$$9  goto 123


state 120
	cmd : DO $$7 cmd WHILE '(' exp ')' . ';'  (26)

	';'  shift 124
	.  error


state 121
	cmd : WRITE '(' LIT $$4 ',' exp ')' ';' .  (20)

	.  reduce 20


state 122
	restoIf : ELSE $$12 . cmd  (38)

	ID  shift 25
	NUM  shift 26
	READ  shift 27
	WRITE  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	TRUE  shift 32
	FALSE  shift 33
	CONTINUE  shift 34
	BREAK  shift 35
	INCR  shift 36
	DO  shift 37
	'!'  shift 38
	'('  shift 39
	'{'  shift 40
	.  error

	cmd  goto 125
	exp  goto 43


state 123
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 . ExpOpc $$10 ')' cmd  (30)
	ExpOpc : .  (36)

	ID  shift 25
	NUM  shift 26
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 36
	'!'  shift 38
	'('  shift 39
	')'  reduce 36

	exp  goto 78
	ExpOpc  goto 126


state 124
	cmd : DO $$7 cmd WHILE '(' exp ')' ';' .  (26)

	.  reduce 26


state 125
	restoIf : ELSE $$12 cmd .  (38)

	.  reduce 38


state 126
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc . $$10 ')' cmd  (30)
	$$10 : .  (29)

	.  reduce 29

	$$10  goto 127


state 127
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 . ')' cmd  (30)

	')'  shift 128
	.  error


state 128
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' . cmd  (30)

	ID  shift 25
	NUM  shift 26
	READ  shift 27
	WRITE  shift 28
	IF  shift 29
	WHILE  shift 30
	FOR  shift 31
	TRUE  shift 32
	FALSE  shift 33
	CONTINUE  shift 34
	BREAK  shift 35
	INCR  shift 36
	DO  shift 37
	'!'  shift 38
	'('  shift 39
	'{'  shift 40
	.  error

	cmd  goto 129
	exp  goto 43


state 129
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmd .  (30)

	.  reduce 30


State 111 contains 1 shift/reduce conflict.


46 terminals, 24 nonterminals
62 grammar rules, 130 states
